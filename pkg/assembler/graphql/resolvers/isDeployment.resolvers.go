package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"

	"github.com/guacsec/guac/pkg/assembler/graphql/model"
)

// IngestDeployment is the resolver for the ingestDeployment field.
func (r *mutationResolver) IngestDeployment(ctx context.Context, isDeploymentInputSpec model.IsDeployedInputSpec) (string, error) {
	panic(fmt.Errorf("not implemented: IngestDeployment - ingestDeployment"))
}

// IngestDeployments is the resolver for the ingestDeployments field.
func (r *mutationResolver) IngestDeployments(ctx context.Context, isDeploymentInputSpec []*model.IsDeployedInputSpec) ([]string, error) {
	panic(fmt.Errorf("not implemented: IngestDeployments - ingestDeployments"))
}

// IsDeployed is the resolver for the isDeployed field.
func (r *queryResolver) IsDeployed(ctx context.Context, isDeployedSpec model.IsDeployedSpec) ([]*model.IsDeployed, error) {
	panic(fmt.Errorf("not implemented: IsDeployed - isDeployed"))
}

// IsDeployedList is the resolver for the isDeployedList field.
func (r *queryResolver) IsDeployedList(ctx context.Context, isDeployedSpec model.IsDeployedSpec, after *string, first *int) (*model.IsDeployedConnection, error) {
	panic(fmt.Errorf("not implemented: IsDeployedList - isDeployedList"))
}
